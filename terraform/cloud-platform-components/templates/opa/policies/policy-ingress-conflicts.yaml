kind: ConfigMap
apiVersion: v1
metadata:
  name: policy-ingress-conflicts
  namespace: opa
  labels:
    openpolicyagent.org/policy: rego
data:
  main: |
    package cloud_platform.ingress_admission

    import data.kubernetes.ingresses

    deny[msg] {
        input.request.kind.kind = "Ingress"
        # input.request.operation = "PUT"
        re_match("(CREATE|PUT|PATCH)", input.request.operation)
        host = input.request.object.spec.rules[_].host
        ingress = ingresses[other_ns][other_ingress]
        other_ns != input.request.namespace
        ingress.spec.rules[_].host = host
        msg = sprintf("invalid ingress host %q (conflicts with %v/%v)", [host, other_ns, other_ingress])
    }
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: policy-default
  namespace: opa
  labels:
    openpolicyagent.org/policy: rego
data:
  main: |
    package system

    import data.cloud_platform.ingress_admission

    main = {
      "apiVersion": "admission.k8s.io/v1beta1",
      "kind": "AdmissionReview",
      "response": response,
    }

    default response = {"allowed": true}

    response = {
        "allowed": false,
        "status": {
            "reason": reason,
        },
    } {
        reason = concat(", ", ingress_admission.deny)
        reason != ""
    }
